
* Day one
- input:
  + several lines
  + each line has a number or blank
  + blank indicates end of group
- transformation:
  + for each group, calculate sum of numbers in their lines
- first output:
  + max amount in a group
- second output:
  + total of the top 3 groups

* Day two
- Input:
  + Several lines
  + In each line you have two letters: [A, B, C ] and [X, Y, Z]
  + A=X=rock, B=Y=paper, C=Z=scissor
- First transform:
  + For each line compute score = score_shape + score_win
  + score_shape: A=1, B=2, C=3
  + score_wind: win=6, draw=3, loss=0
  + NOTE: need to handle 2 special cases (A vs. Z and C vs. X)
- Second transform:
  + Now X is loss, Y is draw and Z is win (one part of the score is already calculated)
  + Need to map first column to corresponding shape to get second part of the score
- Outputs:
  + Total score according to first transform
  + Total score according to second transform

* Day three
- Input
  + Multiple lines
  + In every line many letters, lowercase and uppercase
  + Lowercase letters represent item type 1 and uppercase item type 2
  + Each line represents a rucksack
  + First half of line represents first compartment
- First transformation:
  + Map letters to numbers (priority) (a -> 1, ... z -> 26, A -> 27, ... Z -> 52)
  + Find letter present in both compartments and calculate its priority
- Second transformation:
  + Every 3 lines form a group
  + Find item common among the 3 groups
  + Map it to a priority
- Outputs:
  + Sum of priorities over lines
  + Sum of priority over groups
* Day four
- Input
  + Multiple lines
  + Every line indicates two ranges: 2-4,6-8
- Transform:
  + Identify whether one of the two ranges is fully included in the other
- Output
  + Number of lines where the condition is true
